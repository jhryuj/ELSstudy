%% directories
% data_dir = '/oak/stanford/groups/iang/users/lrborch/204b/Data/';
% subj = '006-T1';
% mrVista_dir = '/oak/stanford/groups/iang/users/lrborch/204b/Codes/vistasoft-master'; %add mrVista to path
% spm_dir = '/oak/stanford/groups/iang/users/lrborch/204b/Codes/spm12';
% roilist_file = '/oak/stanford/groups/iang/users/lrborch/204b/Codes/analysis/aseg+aparc_selected.mat';
% outfolder = ['Analysis_190520']; 

% data_dir = '/Volumes/iang/users/lrborch/204b/Data/';
% subj = '006-T1';
% mrVista_dir = '/Volumes/iang/users/lrborch/204b/Codes/vistasoft-master'; %add mrVista to path
% spm_dir = '/Volumes/iang/users/lrborch/204b/Codes/spm12';
% outfolder = ['Analysis_190520'];

%% function 
function vis_ContrastMaps(data_dir,subj,mrVista_dir,spm_dir,outfolder)

GLM_dir = fullfile(data_dir,subj,'GLManalysis',outfolder); 
GLMroi_dir = fullfile(GLM_dir,'rois');
roi_dir = fullfile(data_dir,subj,'rois');

addpath(genpath(mrVista_dir));
addpath(spm_dir);

% load design matrix and column names
load(fullfile(GLM_dir, 'designmat.mat'))

% define contrasts of interest
contrastNames = {'anteGain-anteLoss'; 'anteGain-anteNeut'; 'anteLoss-anteNeut'; ...
    'gain-loss'; 'gain-nogain'; 'loss-noloss'};
contrastIdx   = [1, 2; 1, 3; 2, 3;4,5; 4,6; 5,7]; % the first column minus the second column.

if length(contrastNames) ~= size(contrastIdx,1)
    error('Check contrast names and indices')
end

% for each ROI
roiList = dir(GLMroi_dir);
roiList = roilist(3:end); 

%% histograms
% get a histogram of errors
% get histograms of betas
for roiN = 1:length(roiList)
    cd(fullfile(roiList(roiN).folder,roiList(roiN).name))
    load(fullfile(roiList(roiN).folder,roiList(roiN).name,'regression.mat'))
    
    distribution_histogram(r2, ['r2'])
    
    for betaN = 1:9
        distribution_histogram(betamatrix(:,betaN), ['beta_' columnNames{betaN}])
    end
end

%% get the contrast maps.
cd(fullfile(GLMroi_dir,'wholebrain'))
niitemplate = readFileNifti(fullfile(data_dir,subj,'spm','crkidmid_3mm_2sec_raw_00001.nii')); % coregistered nifti. 

N = size(roidata_pc,2);
p = size(designmat,2);
designmat = designmat(end-N+1:end,:);
yvar = 1/(N-p-1)*norm(res)^2; 
designvar = pinv(designmat'*designmat)*yvar;

for contrastN = 1:length(contrastNames)    
    % select contrasts
    c = zeros(16,1); 
    c(contrastIdx(contrastN,1)) = 1; c(contrastIdx(contrastN,2)) = -1; 
    
    contrast = betamatrix*c;
    
    contrast_var = c'*designvar*c; 
    contrast_t   = contrast/sqrt(contrast_var);
    % plot contrast map, thresholding for the variance explained. 
    % filter contrast map 
    
    cnii      =  niitemplate; 
    cnii.fname = fullfile(GLMout_dir,roiName,['contrast_ ' contrastNames{contrastN '.nii']); 
        
    roi3d           = int16(roiidx);
    roi3d(roiidx)   = betamatrix(:,regN);
    betanii.data    = roi3d; 
        
    writeFileNifti(betanii); 

    % Contrast map, thresholding for 
end
    
    contrastNames = {'anteGain-anteLoss'; 'anteGain-anteNeut'; 'anteLoss-anteNeut'; ...
    'gain-loss'; 'gain-nogain'; 'loss-noloss'};
    contrastIdx   = [1, 2; 1, 3; 2, 3;4,5; 4,6; 5,7];





end

function distribution_histogram(x, varName)
%histogram and
% statistics: 
% mean
% std
% kurtosis
fid_hist = figure('Position', [275 53 1389 902]);
histogram(x,'Normalization', 'pdf');
ax = gca; ax.FontSize = 16;
ylabel('Probability density','FontSize',22); xlabel(varName,'FontSize',22)
title({'Histogram', ...
    ['mean = ' num2str(mean(x)), '; std = ' num2str(std(x)),...
    '; skew = ' num2str(kurtosis(x))]},'FontSize',22);
saveas(fid_hist, ['histogram_' varName '.fig'])
saveas(fid_hist, ['histogram_' varName '.png'])
close(fid_hist)
end

% make a separate .m file: 
function plot_contrast(

end

